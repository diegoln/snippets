name: Deploy to Production

on:
  workflow_run:
    workflows: ["Deploy to Staging"]
    types:
      - completed
    branches: [main]
  workflow_dispatch:

env:
  PROJECT_ID: advanceweekly-prod
  GOOGLE_OAUTH_CLIENT_ID: ${{ secrets.GOOGLE_OAUTH_CLIENT_ID }}
  SERVICE_NAME: advanceweekly
  REGION: us-central1

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    # Only deploy to production if staging deployment was successful
    if: github.event.workflow_run.conclusion == 'success' || github.event_name == 'workflow_dispatch'
    
    permissions:
      contents: read
      id-token: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # Authenticate using Workload Identity Federation (more secure than service account keys)
      # This requires the workload identity pool and provider to be set up in Google Cloud
      # Run ./scripts/setup-workload-identity.sh to configure if not already done
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: projects/926387508050/locations/global/workloadIdentityPools/github-actions-pool/providers/github-actions-provider
          service_account: github-actions-sa@advanceweekly-prod.iam.gserviceaccount.com

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Configure Docker for Artifact Registry
        run: |
          gcloud auth configure-docker us-central1-docker.pkg.dev

      - name: Pre-deployment verification
        run: |
          echo "🔍 Verifying deployment configuration..."
          echo ""
          echo "🌐 Target Domain: https://advanceweekly.io"
          echo "🔐 OAuth Redirect URI (FIXED): https://advanceweekly.io/api/auth/callback/google"
          echo ""
          echo "📋 Pre-deployment checklist:"
          echo "✓ OAuth client ID is configured"
          echo "✓ Custom domain uses FIXED redirect URI"
          echo "✓ No dynamic OAuth updates needed"
          echo ""

      - name: Submit build to Cloud Build
        run: |
          gcloud builds submit \
            --config=cloudbuild.yaml \
            --project=$PROJECT_ID

      - name: Initialize Production Database
        run: |
          echo "🗄️ Initializing production database..."
          
          # Make production init script executable
          chmod +x scripts/post-deploy-production-init.sh
          chmod +x scripts/apply-database-schema.sh
          
          # Run production initialization (applies schema and seeds career guidelines)
          # This step is critical and should fail the deployment if it fails
          ./scripts/post-deploy-production-init.sh

      - name: Post-deployment verification
        run: |
          echo "✅ Deployment completed successfully!"
          echo ""
          echo "🌐 Application URL: https://advanceweekly.io"
          echo "🎭 Staging URL: https://advanceweekly.io/staging"
          echo "🔐 OAuth Redirect URI (FIXED): https://advanceweekly.io/api/auth/callback/google"
          echo ""
          echo "📋 Deployment Summary:"
          echo "  - Target Domain: https://advanceweekly.io"
          echo "  - OAuth Configuration: FIXED (no updates needed)"
          echo "  - Environment: Production"
          echo "  - Build ID: ${{ github.sha }}"
          echo ""
          echo "⚡ IMPORTANT: OAuth redirect URI is FIXED and never needs updates!"
          
          # Create deployment summary
          cat > deployment-summary.txt << EOF
          Deployment Summary
          ==================
          Deployment Time: $(date)
          Application URL: https://advanceweekly.io
          OAuth Redirect URI: https://advanceweekly.io/api/auth/callback/google
          Build ID: ${{ github.sha }}
          
          Configuration Status:
          ✅ Custom domain configured
          ✅ HTTPS/SSL enabled
          ✅ Fixed OAuth redirect URI
          ✅ No manual OAuth updates required
          
          OAuth Client Configuration (one-time setup):
          https://console.cloud.google.com/apis/credentials?project=$PROJECT_ID
          EOF
          
          cat deployment-summary.txt

      - name: Run health check
        run: |
          echo "🏥 Running deployment health check..."
          echo ""
          echo "🔍 Checking application health..."
          
          # Test the custom domain (may take time for DNS/SSL propagation)
          DOMAIN_URL="https://advanceweekly.io"
          
          echo "📡 Testing: $DOMAIN_URL"
          if curl -f -s --max-time 10 "$DOMAIN_URL" > /dev/null 2>&1; then
            echo "✅ Custom domain is accessible"
          else
            echo "⚠️  Custom domain not yet accessible (DNS/SSL propagation may be in progress)"
            echo "   This is normal for new deployments and should resolve within 5-60 minutes"
          fi
          
          echo ""
          echo "🔐 OAuth Configuration Status:"
          echo "✅ Redirect URI: https://advanceweekly.io/api/auth/callback/google"
          echo "✅ Configuration: FIXED (no updates needed)"
          echo ""
          echo "📊 Health Check Summary:"
          echo "  - Deployment: ✅ Completed"
          echo "  - Domain: 🌐 advanceweekly.io"
          echo "  - OAuth: ✅ Fixed configuration"
          echo "  - Manual Steps: ❌ None required"

      - name: Create deployment artifact
        if: always()
        run: |
          # Create a deployment summary artifact
          mkdir -p deployment-artifacts
          
          # Create deployment info with fixed domain configuration
          cat > deployment-artifacts/deployment-info.json << EOF
          {
            "deployment_time": "$(date -u +%Y-%m-%dT%H:%M:%SZ)",
            "service_name": "$SERVICE_NAME",
            "custom_domain_url": "https://advanceweekly.io",
            "project_id": "$PROJECT_ID",
            "region": "$REGION",
            "oauth_client_id": "${{ env.GOOGLE_OAUTH_CLIENT_ID }}",
            "github_sha": "${{ github.sha }}",
            "github_ref": "${{ github.ref }}",
            "workflow_run_id": "${{ github.run_id }}",
            "configuration_type": "fixed_domain",
            "oauth_configuration": {
              "nextauth_url": "https://advanceweekly.io",
              "auth_url": "https://advanceweekly.io",
              "redirect_uri": "https://advanceweekly.io/api/auth/callback/google",
              "redirect_uri_status": "FIXED - never changes",
              "manual_update_required": false,
              "console_url": "https://console.cloud.google.com/apis/credentials?project=$PROJECT_ID"
            },
            "deployment_type": "automated_with_fixed_oauth"
          }
          EOF
          
          # Copy deployment summary if it exists
          if [ -f deployment-summary.txt ]; then
            cp deployment-summary.txt deployment-artifacts/
          fi

      - name: Upload deployment artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: deployment-artifacts-${{ github.run_id }}
          path: deployment-artifacts/
          retention-days: 30