# Dependencies
node_modules/
/.pnp
.pnp.js

# Testing
/coverage

# Next.js
/.next/
/out/
next-env.d.ts

# Production
/build

# Misc
.DS_Store
*.pem

# Debug
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# Local env files
.env
.env*.local

# Vercel
.vercel

# TypeScript
*.tsbuildinfo

# Prisma
prisma/dev.db
prisma/dev.db-journal
prisma/test.db
prisma/test.db-journal
test.db
*.db-journal
prisma/schema.prisma  # Generated from template

# Logs
logs
*.log
server.log

# Runtime data
pids
*.pid
*.seed
*.pid.lock

# Coverage directory used by tools like istanbul
coverage/
*.lcov

# Dependency directories
node_modules/

# Optional npm cache directory
.npm

# Optional eslint cache
.eslintcache

# Microbundle cache
.rpt2_cache/
.rts2_cache_cjs/
.rts2_cache_es/
.rts2_cache_umd/

# Optional REPL history
.node_repl_history

# Output of 'npm pack'
*.tgz

# Yarn Integrity file
.yarn-integrity

# dotenv environment variables file
.env.test

# parcel-bundler cache (https://parceljs.org/)
.cache
.parcel-cache

# Next.js build output
.next

# Nuxt.js build / generate output
.nuxt
dist

# Gatsby files
.cache/
public

# Storybook build outputs
.out
.storybook-out

# Temporary folders
tmp/
temp/

# Terraform
.terraform/
*.tfstate
*.tfstate.backup
*.tfvars
.terraform.lock.hcl

# OAuth configuration backups
.env.local.backup
.oauth-config.local.json

# Staging environment notes
# The following files are intentionally tracked and deployed for staging:
# - lib/mock-users.ts (used by both dev and staging)
# - lib/integration-mock-data.ts (used by both dev and staging)
# - lib/environment.ts (environment detection for all modes)
# - scripts/init-staging-data.ts (staging initialization)
# - middleware.ts (path-based routing)
# - components/DevTools.tsx (dev tools in staging)

# Don't ignore staging-specific build artifacts that might be useful
# (Currently none, but documenting for future reference)